@page
@using System.Data;
@model IntugentWebApp.Pages.Admin_Group.AIAnalysisModel
@{
    ViewData["ActivePage"] = "AI Data Analysis";
}
@* Error Message *@
@if (TempData["ErrorOnServer"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        Error: @TempData["ErrorOnServer"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<div class="row">

<div class="col-6">

    <!-- General Info -->
    <div class="card card-default">
        <div class="card-header align-items-center">
                <h2 class="">General Info</h2>
        </div>
        <div class="card-body">
            <form method="post">
                <div class="row">
                    <div class="col-12">
                        <!-- Project Study Name -->
                        <div class="form-floating mb-2">
                                <input type="text" id="" class="form-control" value="@Model.gStudyName" id="projectStudyName" onblur="GenInfo_LF('gStudyName',this.value)" placeholder="">
                            <label for="projectStudyName">Data/Model Name</label>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-4">
                        <!-- Dataset -->
                        <div class="form-floating mb-2">
                                <input type="text" disabled id="" class="form-control" value="@Model.gID" id="DatabaseID" placeholder="">
                            <label for="DatabaseID">Database ID:</label>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <!-- Group-->
                        <div class="form-floating mb-2">
                                <select class="form-select" id="Group" onblur="GenInfo_LF('gGroup',this.options[this.selectedIndex].id)">
                                    <!option id="RND"  @(Model.gGroup == "RND" ? "selected" : "")>RND</!option>
                                    <!option id="MFG"  @(Model.gGroup == "MFG" ? "selected" : "")>MFG</!option>
                             
                            </select>
                            <label for="Group">Group</label>
                        </div>
                    </div>

                    <div class="col-lg-4">
                        <!--Predicted Property -->
                        <div class="form-floating mb-2">
                                <select class="form-select" id="PredictedProperty" onblur="GenInfo_LF('gProperty',this.options[this.selectedIndex].id)">
                                    <!option id="SQL"  @(Model.gProperty == "SQL" ? "selected" : "")>SQL Query</!option>
                            </select>
                            <label for="PredictedProperty">Predicted Property</label>
                        </div>
                    </div>
                </div>

                <div class="row">

                        <button type="button" class="btn btn-primary m-auto col-8" onclick="GUploadData()">
                                Upload Data
                            </button>
                    <div class="col-lg-4">
                        <!-- Data Source -->
                        <div class="form-floating mb-2">
                                <select class="form-select" id="DataSource" onblur="GenInfo_LF('gSource',this.options[this.selectedIndex].id)">
                                    <!option id="SQL"  @(Model.gSource == "SQL" ? "selected" : "")>SQL Query</!option>
                                    <!option id="FILE"  @(Model.gSource == "FILE" ? "selected" : "")>Text file (Tab limited)</!option>
                            </select>
                            <label for="DataSource">Data Source</label>
                        </div>
                    </div>
                </div>
            </form>

        </div>
    </div>

</div>

<div class="col-6">

        <!--Data Source -->
        <div class="card card-default">
            <div class="card-header align-items-center">
                <h2 class="">Data Source</h2>
            </div>
            <div class="card-body">
                <form method="post">
                    <div class="row">
                        <div class="col-12">
                            <!-- Project Study Name -->
                            <div class="form-floating mb-2">
                                <input type="text" id="" class="form-control col-12" onblur="BrowseFile(this.value)" value="@Model.gDataFile" id="gDataFile" placeholder="">
                                <label for="gDataFile">Browse for Data file</label>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <!-- query -->
                            <div class="form-floating mb-2 col-12">
                            <textarea class="col-12 form-control" onblur="GenInfo_LF('gSQL',this.value)" id="query" style="min-height:100px;">
                                @Model.gSQL
                                </textarea>
                            <label for="query">SQL Query</label>
                            </div>
                    </div>
                   
                </form>

            </div>
        </div>

    </div>

</div>
<div class="row">
    <div class="col-7">

    <canvas id="charts"></canvas>
        <div class="col-lg-12">
            <!-- Group-->
            <div class="form-floating mb-2">
                <select class="form-select" id="Group" onblur="GInputVar_Change(this.options[this.selectedIndex].id)">
                    @{int rowIndex=0;}
                    @foreach (var row in Model.gInputVar)
                    {
                        <option id="@rowIndex" value="@row" selected="@(Model.gInputVarSelectedIndex==rowIndex)">@row</option>
                        rowIndex++;
                    } 
                </select>
                <label for="Group">Group</label>
            </div>
        </div>
    </div>
     <div class="col-5">
         <div class="col-12 card-body">
            <table id="searchResultsTable" class="table table-sm table-bordered table-hover table-striped table-responsive-md" style="width:100%">
                <thead>
                    <tr>
                        @if (Model.gData != null)
                        {
                            foreach (DataColumn column in Model.gData.Columns)
                            {
                                <th>@column.ColumnName</th>
                            }
                        }

                    </tr>
                </thead>
                <tbody id="DataTable">
                    @if (Model.gData != null)
                    {
                        foreach (DataRow row in Model.gData.Rows)
                        {
                            <tr>
                                @foreach (var cell in row.ItemArray)
                                {
                                    <td>@cell</td>
                                }
                            </tr>
                        }
                    }
                </tbody>
            </table>
         </div>
        <div class="col-12 card-body">
            <table id="searchResultsTable" class="table table-sm table-bordered table-hover table-striped table-responsive-md" style="width:100%">
                <thead>
                    <tr>
                        <th>Variable</th>
                        <th>Average</th>
                        <th>StdDev</th>
                        <th>Correlation</th>
                    </tr>
                </thead>
                <tbody id="DataTable">
                    @if (Model.gStat != null)
                    {
                        foreach (DataRow row in Model.gStat.Rows)
                        {
                            <tr>
                                @foreach (var cell in row.ItemArray)
                                {
                                    <td>@cell</td>
                                }
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>

    </div>
</div>
@section Scripts{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const xx = @Html.Raw(Json.Serialize(Model.xx));
            const yy = @Html.Raw(Json.Serialize(Model.yy));
            console.log(xx);
            console.log(yy);
            console.log(@Model.gInputIndex);

            const data1 = {
                datasets: [{
                    label: 'Dataset 1',
                    data: @Html.Raw(Json.Serialize(Model.xx.Zip(Model.yy, (x, y) => new { x, y }))),
                    backgroundColor: 'rgba(255, 0, 0, 0.6)',
                    borderColor: 'rgba(255, 0, 0, 1)',
                    borderWidth: 1,
                    pointRadius: 2
                }]
            };
;

            // Common options for both charts
            const options = {
                scales: {
                    x: {
                        type: 'linear',
                        position: 'bottom',
                        title: {
                            display: true,
                            text: ``,
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: `@Model.gChartLeftTitle `,
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: false
                    },
                    zoom: {
                        pan: {
                            enabled: true,
                            mode: 'xy',
                        },
                        zoom: {
                            enabled: true,
                            mode: 'xy',
                            wheel: {
                                enabled: true,
                            },
                            pinch: {
                                enabled: true
                            }
                        }
                    }
                }
            };


            // Create the first chart
            const ctx1 = document.getElementById('charts').getContext('2d');
            const myScatterChart1 = new Chart(ctx1, {
                type: 'scatter',
                data: data1,
                options: options
            });
    });
        function GenInfo_LF(Name,Value) {
            $.ajax({
                type: "POST",
                url: "/Admin_Group/AIAnalysis?handler=GenInfo_LF",
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                data: { Name: Name, Value: Value },
                success: function (response) {
                    console.log('Server response:', response);
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                }
            });
        }
        function GInputVar_Change(Value) {
            $.ajax({
                type: "POST",
                url: "/Admin_Group/AIAnalysis?handler=GInputVar_Change",
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                data: { Value: Value },
                success: function (response) {
                   // console.log('Server response:', response);
                    location.reload();
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                }
            });
        }

        function BrowseFile(filePath) {
            $.ajax({
                type: "POST",
                url: "/Admin_Group/AIAnalysis?handler=BrowseFile",
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                data: { filePath: filePath },
                success: function (response) {
                    // console.log('Server response:', response);
                    location.reload();
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                }
            });
        }


        function GUploadData() {
            $.ajax({
                type: "POST",
                url: "/Admin_Group/AIAnalysis?handler=GUploadData",
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                success: function (response) {
                    console.log('Server response:', response);
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                }
            });
        }
</script>
}
