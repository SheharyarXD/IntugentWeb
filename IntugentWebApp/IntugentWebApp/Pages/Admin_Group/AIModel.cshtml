@page
@model IntugentWebApp.Pages.Admin_Group.AIModelModel
@{
    ViewData["ActivePage"] = "AI Model";
}
@* Error Message *@
@if (TempData["ErrorOnServer"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        Error: @TempData["ErrorOnServer"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<div class="row">
    <div class="col-2">
        <!-- General Info -->
        <div class="card card-default">
            <div class="card-header align-items-center">
                <h2 class="">General Info</h2>
            </div>
            <div class="card-body">
                <form method="post">
                    <div class="row">
                        <div class="col-12">
                            <!-- Project Study Name -->
                            <div class="form-floating mb-2">
                                <input type="text" disabled id="" class="form-control" value="" id="projectStudyName" placeholder="">
                                <label for="projectStudyName">Data/Model Name</label>
                            </div>
                            <!-- Project Study Name -->
                            <div class="form-floating mb-2">
                                <input type="text" disabled id="" class="form-control" value="" id="projectStudyName" placeholder="">
                                <label for="projectStudyName">Data/Model Name</label>
                            </div>
                            <!-- Project Study Name -->
                            <div class="form-floating mb-2">
                                <input type="text" disabled id="" class="form-control" value="" id="projectStudyName" placeholder="">
                                <label for="projectStudyName">Data/Model Name</label>
                            </div>
                            <!-- Project Study Name -->
                            <div class="form-floating mb-2">
                                <input type="text" disabled id="" class="form-control" value="" id="projectStudyName" placeholder="">
                                <label for="projectStudyName">Data/Model Name</label>
                            </div>
                            <!-- Project Study Name -->
                            <div class="form-floating mb-2">
                                <input type="text" disabled id="" class="form-control" value="" id="projectStudyName" placeholder="">
                                <label for="projectStudyName">Data/Model Name</label>
                            </div>
                            <!-- Group-->
                            <div class="form-floating mb-2">
                                <select class="form-select" id="Group" disabled>
                                    @*    @foreach (DataRowView row in Model.gProd1)
                                    {
                                    <option value="@row["Product"]" selected="@(Model.gProd1SelectedValue == (row["Product Code"].ToString()))">@row["Product"]</option>
                                    } *@
                                </select>
                                <label for="Group">Group</label>
                            </div>
                            <!-- Project Study Name -->
                            <div class="form-floating mb-2">
                                <input type="text" disabled id="" class="form-control" value="" id="projectStudyName" placeholder="">
                                <label for="projectStudyName">Data/Model Name</label>
                            </div>
                            <!-- Project Study Name -->
                            <div class="form-floating mb-2">
                                <input type="text" disabled id="" class="form-control" value="" id="projectStudyName" placeholder="">
                                <label for="projectStudyName">Data/Model Name</label>
                            </div>



                            <div class="col-12 card-body text-center pb-5">
                                <h2 class=" py-3"># of Neurons in Layers</h2>
                                <table id="searchResultsTable" class="table table-sm table-bordered table-hover table-striped table-responsive-md" style="width:100%">
                                    <thead>
                                        <tr>
                                            <th>Layer #</th>
                                            <th>Description</th>
                                            <th># of Neurons</th>
                                        </tr>
                                    </thead>
                                    <tbody id="DataTable">
                                        @*   @if (Model.gModels != null && Model.gModels.Count > 0)
                                        {
                                        int rowIndex = 0;
                                        foreach (DataRowView rowView in Model.gModels)
                                        {
                                        <tr>
                                        <td>@rowView["ID"]</td>
                                        <td>@rowView["DateModel"]</td>
                                        <td>@rowView["sNote"]</td>
                                        <td>@rowView["sProperty"]</td>
                                        <td>@rowView["sDataSource"]</td>
                                        <td></td>
                                        <td>
                                        <label class="switch switch-primary switch-pill form-control-label ">
                                        <input type="checkbox" class="switch-input form-check-input" id="@rowView["ID"]" data-index="@rowView["ID"]">
                                        <span class="switch-label"></span>
                                        <span class="switch-handle"></span>
                                        </label>
                                        </td>
                                        </tr>
                                        rowIndex++;
                                        }
                                        } *@
                                    </tbody>
                                </table>
                            </div>
                            <!-- Project Study Name -->
                            <div class="form-floating mb-2">
                                <input type="text" disabled id="" class="form-control" value="" id="projectStudyName" placeholder="">
                                <label for="projectStudyName">Data/Model Name</label>
                            </div>
                        </div>

                        <button type="button" class="btn btn-primary m-auto col-12" onclick="">
                            Upload Data
                        </button>
                    </div>      
                </form>

            </div>
        </div>

    </div>
    <div class="col-6">
        <canvas id="charts"></canvas>
    </div>
    <div class="col-4">
        <!-- General Info -->
        <div class="card card-default">
            <div class="card-header align-items-center">
                <h2 class="">General Info</h2>
            </div>
            <div class="card-body">
                <form method="post">
                    <div class="row">
                        <div class="col-12"
                            <!-- Group-->
                            <div class="form-floating mb-2">
                                <select class="form-select" id="Group" disabled>
                                    @*    @foreach (DataRowView row in Model.gProd1)
                                    {
                                    <option value="@row["Product"]" selected="@(Model.gProd1SelectedValue == (row["Product Code"].ToString()))">@row["Product"]</option>
                                    } *@
                                </select>
                                <label for="Group">Group</label>
                            </div>

                            <div class="col-12 card-body text-center pb-5">
                                <h2 class=" py-3">Neurons in Layer feeding to the hidden Layer</h2>
                                <table id="searchResultsTable" class="table table-sm table-bordered table-hover table-striped table-responsive-md" style="width:100%">
                                    <thead>
                                        <tr>
                                            <th>#</th>
                                            <th>Offset</th>
                                        </tr>
                                    </thead>
                                    <tbody id="DataTable">
                                        @*   @if (Model.gModels != null && Model.gModels.Count > 0)
                                        {
                                        int rowIndex = 0;
                                        foreach (DataRowView rowView in Model.gModels)
                                        {
                                        <tr>
                                        <td>@rowView["ID"]</td>
                                        <td>@rowView["DateModel"]</td>
                                        <td>@rowView["sNote"]</td>
                                        <td>@rowView["sProperty"]</td>
                                        <td>@rowView["sDataSource"]</td>
                                        <td></td>
                                        <td>
                                        <label class="switch switch-primary switch-pill form-control-label ">
                                        <input type="checkbox" class="switch-input form-check-input" id="@rowView["ID"]" data-index="@rowView["ID"]">
                                        <span class="switch-label"></span>
                                        <span class="switch-handle"></span>
                                        </label>
                                        </td>
                                        </tr>
                                        rowIndex++;
                                        }
                                        } *@
                                    </tbody>
                                </table>
                                <h2 class=" py-3">Neurons in hidden Layer</h2>
                            </div>
                    </div>
                </form>

            </div>
        </div>


    </div>
</div>
@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const ctx = document.getElementById('charts').getContext('2d');

            const data1 = {
                label: 'Dataset 1',

                backgroundColor: 'rgba(255, 0, 0, 0.6)',
                borderColor: 'rgba(255, 0, 0, 1)',
                borderWidth: 3,
                pointRadius: 0
            };


            const config = {
                type: 'line',
                data: {
                    datasets: [data1]
                },
                options: {
                    responsive: true,
                    scales: {
                        x: {
                            type: 'linear',
                            position: 'bottom',
                            title: {
                                display: true,
                                text: 'Experimental Output',
                            }
                        },
                        y: {
                            title: {
                                display: true,
                                text: 'Predicted Output',
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: true
                        },
                        zoom: {
                            pan: {
                                enabled: true,
                                mode: 'xy',
                            },
                            zoom: {
                                enabled: true,
                                mode: 'xy',
                                wheel: {
                                    enabled: true,
                                },
                                pinch: {
                                    enabled: true
                                }
                            }
                        }
                    }
                }
            };

            const myChart = new Chart(ctx, config);

            document.getElementById('charts').addEventListener('dblclick', () => {
                myChart.resetZoom();
            });
        });
    </script>
}
