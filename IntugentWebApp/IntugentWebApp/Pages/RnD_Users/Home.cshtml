@page
@using IntugentWebApp.Models
@using System.Data;
@model IntugentWebApp.Pages.RnD_Users.HomeModel
@{
    ViewData["ActivePage"] = "R&D Home Page";
}

<!-- Error message -->
@if (TempData["ErrorOnServer"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        Error: @TempData["ErrorOnServer"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="row">
    <div class="col">

        <!-- Search Card -->
        <div class="card card-default">
            <div class="card-header align-items-center">
                <h2 class="">Search Historical Data</h2>
            </div>
            <div class="card-body">
                <form method="post">
                    <div class="row">
                        <div class="col-lg-4">
                            <!-- Testing Status -->
                            <div class="form-floating mb-2">

                                <select class="form-select" id="testingStatus">
                              @foreach (DataRowView row in Model.gTestStat1)
                                {
                                    <option value="@row["ID"]" selected="@(Model.gTestStat1SelectedValue.ToString() ==row["ID"].ToString())">@row["sName"]</option>
                                }  
                                </select>
                                <label for="testingStatus">Testing Status</label>
                            </div>
                        </div>

                        <div class="col-lg-4">
                            <!-- Product Code -->
                            <div class="form-floating mb-2">
                                <select class="form-select" id="productCode">
                                     @foreach (DataRowView row in Model.gProd1)
                                {
                                    <option value="@row["Product"]" selected="@(Model.gProd1SelectedValue == row["Product Code"].ToString())">@row["Product"]</option>
                                }   
                                </select>
                                <label for="productCode">Product Code</label>
                            </div>
                        </div>

                        <div class="col-lg-4">
                            <!-- Study Type -->
                            <div class="form-floating mb-2">

                                <select class="form-select" id="studyType">
                               @foreach (DataRowView row in Model.gStudyType)
                                {
                                    <option value="@row["ID"]" selected="@(Model.gStudyTypeSelectedValue.ToString() == row["ID"].ToString())">@row["sName"]</option>
                                }  
                                </select>
                                <label for="studyType">Study Type</label>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-lg-4">
                            <!-- Group -->
                            <div class="mb-2 row">
                                <label for="Groups" class="col-md-3 text-right mr-5 col-form-label">Group</label>
                                <div class="col-md-8">
                                    <input type="text" value="@Model.gLoc1" class="form-control" id="Groups" readonly>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-4">
                            <!-- After Date -->
                            <div class="form-floating mb-2">
                                <input type="date" id="gRndDate2" class="form-control" value="@Model.gRndDate2?.ToString("yyyy-MM-dd")" id="afterDate" placeholder="">
                                <label for="afterDate">Experiment Date - After or At</label>
                            </div>
                        </div>

                        <div class="col-lg-4">

                            <!-- Before Date -->
                            <div class="form-floating mb-2">
                                <input type="date" id="gRndDate1" class="form-control" value="@Model.gRndDate1?.ToString("yyyy-MM-dd")" id="beforeDate">
                                <label for="beforeDate">Experiment Date - Before or At</label>
                            </div>
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-lg-8">
                            <!-- Project Study Name -->
                            <div class="form-floating mb-2">
                                <input type="text" id="gRNDNameSearch" class="form-control" value="@Model.gRNDNameSearch" id="projectStudyName" placeholder="">
                                <label for="projectStudyName">Project/Study Name - Contains</label>
                            </div>
                        </div>

                        <div class="col-lg-4 d-flex justify-content-end">
                            <div class="row" style="margin: 0;">
                                <button type="button" class="btn btn-primary m-auto" onclick="gSearchDataSets()">
                                    Retrieve Top 20 Datasets
                                </button>
                            </div>
                        </div>
                    </div>
                </form>

            </div>
        </div>

    </div>
</div>

<div class="text-end">
    <button type="button" class="btn btn-primary mb-5" onclick="gCopy_Click()">
        Copy All Datasets Meeting Search Criteria
    </button>
</div>

<div class="row">
    <div class="col">

        <!-- Search Results -->
        <div class="card card-default">
            <div class="card-header align-items-center">
                <h2 class="">Search Results - Select any Data Record in the List Below to see Detailed Data</h2>
            </div>
            <div class="card-body">
                <table id="searchResultsTable" class="table table-hover table-product dataTable" style="width:100%">
                    <thead>
                        <tr>
                            @* <th>ID</th>
                            <th>Date</th>
                            <th>Shift</th>
                            <th>Green Board Time Stamp</th>
                            <th>FG Board Time Stamp</th>
                            <th>Product</th>
                            <th>Location</th>
                            <th>Select</th> *@

                            @* Verify From Asjad sb !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!*@
                            @if (Model.gRNDSearch.Table != null)
                            {
                                foreach (DataColumn column in Model.gRNDSearch.Table.Columns)
                                {
                                    <th>@column.ColumnName</th>
                                }
                                <th>Select</th>
                            }
                        </tr>
                    </thead>
                    <tbody id="DataTable">
                        @if (Model.gRNDSearch != null && Model.gRNDSearch.Count > 0)
                        {
                            int rowIndex = 0;
                            foreach (DataRowView rowView in Model.gRNDSearch)
                            {

                                <tr>
                                    @{
                                        var itemArray = rowView.Row.ItemArray;
                                        var id = itemArray[0]; // first item is the ID
                                        for (int i = 0; i < itemArray.Length; i++)
                                        {
                                                    <td>@itemArray[i]</td>
                                        }
                                    }

                                    <td>
                                        <label class="switch switch-primary switch-pill form-control-label ">
                                            <input type="checkbox" class="switch-input form-check-input" id="@rowView["ID"]" data-index="@rowView["ID"]">
                                            <span class="switch-label"></span>
                                            <span class="switch-handle"></span>
                                        </label>
                                    </td>
                                </tr>
                                rowIndex++;
                            }

                        }
                    </tbody>
                </table>
            </div>
        </div>

    </div>
</div>

<div class="text-end">
    <button type="button" class="btn btn-primary mb-2" onclick="gNewDataSetRND()">
        Create A New Dataset
    </button>
</div>


@* @{
    // if some dataset is already selected.. set its checkbox to checked..
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                var currentId = @Html.Raw(Model.gRNDSearchSelectedIndex);
                console.log(@Model.gRNDSearchSelectedIndex "+" @Model.selectedDatasetID)
                if (currentId) {

                    var checkbox = document.getElementById('select_' + currentId);

                    if (checkbox) {
                        checkbox.checked = true;
                    }
                }
            });
        </script>
} *@
@section Scripts {

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var currentId = @Html.Raw(Model.gRNDSearchSelectedIndex);
            console.log(@Model.gRNDSearchSelectedIndex , currentId)
            if (currentId) {

                var checkbox = document.getElementById(currentId);

                if (checkbox) {
                    checkbox.checked = true;
                }
            }
        });

        // handle checkbox change event
        $('input[type="checkbox"]').change(function () {
            if ($(this).is(':checked')) {
                var selectedID = $(this).attr('id').substring(7); // remove "select_" prefix
                unselectAllRows($(this).attr('id'));
                var selectedDatasetID = $(this).data('index');
                sendIdToServer(selectedID, selectedDatasetID);
            }
        });

        // unselect all other rows
        function unselectAllRows(selectedID) {
            $('input[type="checkbox"]').each(function () {
                if ($(this).attr('id') !== selectedID) {
                    $(this).prop('checked', false);
                }
            });
        }

        // send id to server-side
        function sendIdToServer(selectedID, selectedDatasetID) {
            $.ajax({
                type: "POST",
                url: "/RnD_Users/Home?handler=GSelectDataSet",
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                data: { gRnDSearchSelectedIndex: selectedID, gRnDSearchRowsCount: @Model.gRNDSearch.Count, gRnDSelectedDatasetID: selectedDatasetID },
                success: function (response) {
                    console.log('Server response:', response);
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                }
            });
        }


        function gSearchDataSets() {
            const gRndDate1 = document.getElementById('gRndDate1').value;
            const gRndDate2 = document.getElementById('gRndDate2').value;
            const gRNDNameSearch = document.getElementById('gRNDNameSearch').value;
            const gProd1SelectedValueElement = document.getElementById('productCode');
            const gProd1SelectedValue = gProd1SelectedValueElement.options[gProd1SelectedValueElement.selectedIndex].value;

            const gTestStat1SelectedValueElement = document.getElementById('testingStatus');
            const gTestStat1SelectedValue = gTestStat1SelectedValueElement.options[gTestStat1SelectedValueElement.selectedIndex].value;

            const gStudyTypeSelectedValueElement = document.getElementById('studyType');
            const gStudyTypeSelectedValue = gStudyTypeSelectedValueElement.options[gStudyTypeSelectedValueElement.selectedIndex].value;
            // // Log all data to console
            // console.log('Data to be sent:');
            // console.log('gRndDate1:', gRndDate1);
            // console.log('gRndDate2:', gRndDate2);
            // console.log('gRNDNameSearch:', gRNDNameSearch);
            // console.log('gProd1SelectedValue:', gProd1SelectedValue);
            // console.log('gTestStat1SelectedValue:', gTestStat1SelectedValue);
            // console.log('gStudyTypeSelectedValue:', gStudyTypeSelectedValue);
            $.ajax({
                type: "POST",
                url: "/RnD_Users/Home?handler=GSearchDataSets_Click",
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                data: { gRndDate1: gRndDate1, gRndDate2: gRndDate2, gProd1SelectedValue: gProd1SelectedValue, gTestStat1SelectedValue: gTestStat1SelectedValue, gStudyTypeSelectedValue: gStudyTypeSelectedValue, gRNDNameSearch: gRNDNameSearch},
                success: function (response) {
                   // console.log('Server response:', response);
                   location.reload();
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                }
            });


        }

        function gNewDataSetRND() {

            $.ajax({
                type: "POST",
                url: "/RnD_Users/Home?handler=GNewDataSetRND_Click",
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                success: function (response) {
                    console.log('Server response:', response);
                    updateTable(response);
                   // location.reload();
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                }
            });


        }
        function updateTable(data) {
            var tableBody = $('#DataTable');
            tableBody.empty(); // Clear existing rows
            $.each(data, function (index, row) {
                var rowHtml = '<tr>';
                for (var i = 0; i < row.length; i++) {
                    rowHtml += '<td>' + row[i] + '</td>';
                }
                rowHtml += '<td><label class="switch switch-primary switch-pill form-control-label ">' +
                    '<input type="checkbox" class="switch-input form-check-input" id="' + row[0] + '" data-index="' + row[0] + '">' +
                    '<span class="switch-label"></span><span class="switch-handle"></span></label></td></tr>';
                tableBody.append(rowHtml);
            });
        }
        function gCopy_Click() {

            $.ajax({
                type: "POST",
                url: "/RnD_Users/Home?handler=GCopy_Click",
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                success: function (response) {
                    console.log('Server response:', response);
                    if (navigator.clipboard) {
                        navigator.clipboard.writeText(response)
                            .then(function () {
                                console.log('Text copied to clipboard');
                               // location.reload();
                            })
                            .catch(function (err) {
                                console.error('Failed to copy text:', err);
                                // Handle error
                            });
                    } else {
                        console.warn('Clipboard API not supported');
                        // Fallback for browsers that do not support Clipboard API
                        // You can use other methods here to copy text to clipboard
                    }
                  //  location.reload();
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                }
            });


        }

    </script>
}

